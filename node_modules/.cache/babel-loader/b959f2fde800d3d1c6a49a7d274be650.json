{"ast":null,"code":"import _classCallCheck from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/annapryadko/Desktop/FullStack/React/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from './Components/Table';\nimport axios from \"axios\";\nimport { BrowserRouter } from 'react-router-dom';\nimport socketIOClient from \"socket.io-client\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      age: \"\",\n      mail: \"\",\n      id: \"\",\n      foundStudents: [],\n      selectStudent: [],\n      endpoint: \"localhost:4002\",\n      color: 'orange',\n      studentForInsert: {}\n    };\n\n    _this.ButtonInsert = function () {\n      var studentForInsert = {};\n      studentForInsert.name = _this.state.name;\n      studentForInsert.age = _this.state.age;\n      studentForInsert.mail = _this.state.mail;\n\n      _this.setState({\n        studentForInsert: studentForInsert\n      });\n\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('insert student', _this.state.studentForInsert); // change 'red' to this.state.color \n    };\n\n    _this.send = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('insert student', _this.state.studentForInsert); // change 'red' to this.state.color \n    };\n\n    _this.componentDidMount = function () {\n      _this.getAllStudents();\n\n      var socket = socketIOClient(_this.state.endpoint); //socket.emit('insert student', this.state.studentForInsert) // change 'red' to this.state.color\n      //setInterval(this.send(), 1000)\n\n      socket.on('insert student', function (studentForInsert) {// let AllStud=this.state.foundStudents;\n        // addStud.id=AllStud[(AllStud.length)-1].id+1;\n        // AllStud.push(addStud);\n        //this.setState({ foundStudents: allStud });\n      });\n    };\n\n    _this.getAllStudents = function () {\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.get(\"http://localhost:4002/getStudents\").then(function (response) {\n        console.log(response.data); //console.log(self.state.arrPosts);\n\n        self.setState({\n          foundStudents: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleChange = function (event, type) {\n      if (type === 0) {\n        _this.setState({\n          name: event.target.value\n        });\n\n        console.log(\"change\", _this.state.name);\n      }\n\n      if (type === 1) {\n        _this.setState({\n          age: event.target.value\n        });\n\n        console.log(\"change\", _this.state.age);\n      }\n\n      if (type === 2) {\n        _this.setState({\n          mail: event.target.value\n        });\n\n        console.log(\"change\", _this.state.mail);\n      }\n    };\n\n    _this.printRes = function () {\n      var printArray = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.state.foundStudents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          printArray.push(React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, item.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, item.age), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, item.mail)));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return printArray;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"INSERT\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Please, enter the name.\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 0);\n        },\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Please, enter the age.\"), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"age\",\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 1);\n        },\n        value: this.state.age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Please, enter the mail.\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"mail\",\n        onChange: function onChange(event) {\n          return _this2.handleChange(event, 2);\n        },\n        value: this.state.mail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary p-3 m-3\",\n        onClick: function onClick() {\n          return _this2.ButtonInsert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Insert\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"All students: \")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Table, {\n        students: this.printRes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/FullStack/React/my-app/src/App.js"],"names":["React","Component","Table","axios","BrowserRouter","socketIOClient","App","state","name","age","mail","id","foundStudents","selectStudent","endpoint","color","studentForInsert","ButtonInsert","setState","socket","emit","send","componentDidMount","getAllStudents","on","self","get","then","response","console","log","data","catch","error","handleChange","event","type","target","value","printRes","printArray","item","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Table from './Components/Table';\nimport axios from \"axios\";\nimport { BrowserRouter } from 'react-router-dom'\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  state = {\n    name:\"\",\n    age:\"\",\n    mail:\"\",\n    id:\"\",\n    foundStudents: [],\n    selectStudent:[],\n    endpoint: \"localhost:4002\",\n    color: 'orange',\n    studentForInsert: {},\n  };\n\n\n  // sending sockets\n  ButtonInsert = () => {\n    let studentForInsert={};\n    studentForInsert.name=this.state.name;\n    studentForInsert.age=this.state.age;\n    studentForInsert.mail=this.state.mail;\n    this.setState({ studentForInsert: studentForInsert });\n\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit('insert student', this.state.studentForInsert) // change 'red' to this.state.color \n    \n  }\n  \nsend=()=>{\n  const socket = socketIOClient(this.state.endpoint);\n  socket.emit('insert student', this.state.studentForInsert) // change 'red' to this.state.color \n}\n\ncomponentDidMount=()=>{\n  this.getAllStudents();\n  \n  const socket = socketIOClient(this.state.endpoint);\n    //socket.emit('insert student', this.state.studentForInsert) // change 'red' to this.state.color\n    //setInterval(this.send(), 1000)\n    \n      socket.on('insert student', (studentForInsert) => {\n          \n          // let AllStud=this.state.foundStudents;\n          // addStud.id=AllStud[(AllStud.length)-1].id+1;\n          // AllStud.push(addStud);\n          //this.setState({ foundStudents: allStud });\n          \n      })\n\n}\n\ngetAllStudents=()=>{\n  var self=this;\n  axios.get(`http://localhost:4002/getStudents`)\n  .then(function(response){\n    \n    console.log(response.data);\n    //console.log(self.state.arrPosts);\n   self.setState({ foundStudents: response.data });\n  })\n  .catch(function(error){\n     console.log(error);\n  });\n}\n\n  handleChange=(event,type)=> {\n    if (type === 0){\n      this.setState({name: event.target.value});\n      console.log(\"change\",this.state.name)\n    }\n    if (type === 1) {\n      this.setState({age: event.target.value});\n      console.log(\"change\",this.state.age)\n    }\n    if (type === 2) {\n      this.setState({mail: event.target.value});\n      console.log(\"change\",this.state.mail)\n    }\n  }\n\n  printRes=()=>{\n  \n    let printArray = [];\n        for (let item of this.state.foundStudents)\n        {\n          printArray.push(<tr>\n                    <td>{item.name}</td>\n                    <td>{item.age}</td>\n                    <td>{item.mail}</td>\n                </tr>)\n        }\n    return printArray; \n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n      <h1>INSERT</h1>\n        <div className=\"row\">\n        \n          <label htmlFor=\"name\">\n            Please, enter the name.\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={(event) => this.handleChange(event,0)}\n            value={this.state.name}\n          />\n         </div> \n         <div className=\"row\">\n          <label htmlFor=\"age\">\n            Please, enter the age.\n          </label>\n          <input\n            type=\"number\"\n            id=\"age\"\n            onChange={(event) => this.handleChange(event,1)}\n            value={this.state.age}\n          />\n          </div>\n          <div className=\"row\">\n          <label htmlFor=\"mail\">\n            Please, enter the mail.\n          </label>\n          <input\n            type=\"text\"\n            id=\"mail\"\n            onChange={(event) => this.handleChange(event,2)}\n            value={this.state.mail}\n          />\n         </div>\n          <button type=\"button\" className=\"btn btn-primary p-3 m-3\" onClick={() =>this.ButtonInsert()}>Insert</button>\n       \n        <div className=\"row\">\n        <h3>All students: </h3>\n        </div>\n        <div className=\"row\">\n                \n          <Table students={this.printRes}></Table>\n                \n        </div> \n       \n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}