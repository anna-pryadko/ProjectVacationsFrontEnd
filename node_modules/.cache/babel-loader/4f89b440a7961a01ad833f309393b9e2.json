{"ast":null,"code":"var _jsxFileName = \"/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Registration/Registration.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch, Redirect } from 'react-router-dom';\nimport { Container, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { MDBMask, MDBView } from 'mdbreact';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport axios from \"axios\";\nimport './Login.css';\nimport HomeAdmin from '../Home/HomeAdmin';\nimport HomeUser from '../Home/HomeUser';\nimport Registration from '../Registration/Registration';\n\nclass ModalLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      password: \"\",\n      currentUser: \"\",\n      currentRole: \"\",\n      //currentUserName:\"\",\n      // isLoginSuccess:\"\",\n      loggedIn: \"\"\n    };\n\n    this.handleClick = () => {\n      let password = this.state.password;\n      let userName = this.state.userName;\n      console.log(password, userName);\n      var self = this;\n      axios.get(\"http://localhost:5000/checkLogin?name=\".concat(userName, \"&password=\").concat(password), {\n        withCredentials: true\n      }).then(function (response) {\n        console.log('currentUser', response.data);\n        self.setState({\n          currentUser: response.data\n        });\n        self.setUserAccess();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.setUserAccess = () => {\n      let localUser = this.state.currentUser;\n\n      if (localUser !== {}) {\n        localStorage.currentUser = JSON.stringify(localUser); //save user to localstorage \n\n        localStorage.currentUserName = JSON.stringify(localUser[0].first_name);\n        localStorage.currentUserId = JSON.stringify(localUser[0].id);\n        this.setState({\n          loggedIn: true\n        });\n        this.setState({\n          currentRole: localUser[0].role\n        });\n        console.log(\"localUser[0].role\", localUser[0].role);\n      } else {\n        alert('Name or password incorrect!');\n      }\n    };\n  }\n\n  render() {\n    console.log(\"userName : \", this.state.userName);\n    console.log(\"password : \", this.state.password);\n    console.log(\"loggedIn : \", this.state.loggedIn);\n    console.log(\"currentUser : \", this.state.currentUser); //console.log(\"currentRole : \" , this.state.currentUser[0].role);\n\n    if (this.state.currentUser !== \"\") {\n      console.log(\"currentRole : \", this.state.currentUser[0].role);\n\n      if (this.state.loggedIn == true && this.state.currentUser[0].role == 1) {\n        return React.createElement(Redirect, {\n          to: \"/HomeAdmin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loggedIn == true && this.state.currentUser[0].role == 0) {\n        // redirect to Admin/User\n        return React.createElement(Redirect, {\n          to: \"/HomeUser\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n    } //  if (this.state.loggedIn == false){   // redirect to Login/Registration\n    //   return  <Redirect to=\"/Login\"/>\n    //  }\n\n\n    return React.createElement(\"div\", {\n      className: \"Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginBox col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"REGISTRATION\"), React.createElement(AvForm, {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: \"lableBox\",\n      for: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Enter first name\"), React.createElement(AvField, {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      placeholder: \"Enter first name\",\n      onChange: (event, target) => this.setState({\n        firstName: event.target.value\n      }),\n      value: this.state.firstName,\n      errorMessage: \"Invalid name\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[A-Za-z]+$'\n        },\n        minLength: {\n          value: 2\n        },\n        maxLength: {\n          value: 10\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: \"lableBox\",\n      for: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Enter last name\"), React.createElement(AvField, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      placeholder: \"Enter last name\",\n      onChange: (event, target) => this.setState({\n        lastName: event.target.value\n      }),\n      value: this.state.lastName,\n      errorMessage: \"Invalid name\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[A-Za-z]+$'\n        },\n        minLength: {\n          value: 2\n        },\n        maxLength: {\n          value: 10\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: \"lableBox\",\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Enter user name (email)\"), React.createElement(AvField, {\n      type: \"email\",\n      name: \"userName\",\n      id: \"userName\",\n      placeholder: \"Enter user name (email)\",\n      onChange: (event, target) => this.setState({\n        userName: event.target.value\n      }),\n      value: this.state.userName,\n      errorMessage: \"Invalid name\",\n      validate: {\n        required: {\n          value: true //  pattern: {value: '^[A-Za-z0-9]+$'},\n          //  minLength: {value: 6},\n          //  maxLength: {value: 16}\n\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: \"lableBox\",\n      for: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Password (6 symbols)\"), React.createElement(AvField, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"******\",\n      onChange: (event, target) => this.setState({\n        password: event.target.value\n      }),\n      value: this.state.password,\n      errorMessage: \"Invalid password\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[A-Za-z0-9]+$'\n        },\n        minLength: {\n          value: 6\n        },\n        maxLength: {\n          value: 6\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"offset-5\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Sing In\"))))));\n  }\n\n}\n\nexport default ModalLogin;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Registration/Registration.js"],"names":["React","Component","Route","Link","Switch","Redirect","Container","Col","Form","FormGroup","Label","Input","Button","MDBMask","MDBView","AvForm","AvField","axios","HomeAdmin","HomeUser","Registration","ModalLogin","state","firstName","lastName","userName","password","currentUser","currentRole","loggedIn","handleClick","console","log","self","get","withCredentials","then","response","data","setState","setUserAccess","catch","error","localUser","localStorage","JSON","stringify","currentUserName","first_name","currentUserId","id","role","alert","render","event","target","value","required","pattern","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport { Route, Link, Switch,Redirect} from 'react-router-dom';\nimport {Container, Col, Form,FormGroup, Label, Input,Button,} from 'reactstrap';\nimport {MDBMask, MDBView } from 'mdbreact';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport axios from \"axios\";\n\nimport './Login.css';\n\nimport HomeAdmin from '../Home/HomeAdmin';\nimport HomeUser from '../Home/HomeUser';\nimport Registration from '../Registration/Registration';\n\nclass ModalLogin extends Component {\n    \n    state={\n        firstName:\"\",\n        lastName:\"\",\n        userName:\"\",\n        password:\"\",\n    \n        currentUser:\"\",\n        currentRole:\"\",\n        //currentUserName:\"\",\n        // isLoginSuccess:\"\",\n    \n        loggedIn:\"\",\n       \n       }  \n\nhandleClick=()=>{ \n          \n          let password=this.state.password;\n          let userName=this.state.userName; \n          console.log(password,userName);\n          var self=this;\n          axios.get(`http://localhost:5000/checkLogin?name=${userName}&password=${password}`,{withCredentials:true})\n          .then(function(response){\n            \n          console.log('currentUser',response.data);\n\n          self.setState({currentUser: response.data}); \n\n          self.setUserAccess();\n           \n          })\n          .catch(function(error){\n            console.log(error);\n          });\n         \n      } \n\n      setUserAccess=()=>{      \n\n      let localUser = this.state.currentUser;\n\n      if(localUser!=={}){  \n        localStorage.currentUser=JSON.stringify(localUser); //save user to localstorage \n        localStorage.currentUserName=JSON.stringify(localUser[0].first_name)\n        localStorage.currentUserId=JSON.stringify(localUser[0].id)\n\n        this.setState({loggedIn:true}) \n        \n        this.setState({currentRole: localUser[0].role})\n\n        console.log(\"localUser[0].role\",localUser[0].role)\n        \n      } \n      else {\n        alert('Name or password incorrect!')\n      } \n    }\n\nrender() {\n    \n    console.log(\"userName : \" , this.state.userName);\n    console.log(\"password : \" , this.state.password);\n\n    console.log(\"loggedIn : \" , this.state.loggedIn);\n\n    console.log(\"currentUser : \" , this.state.currentUser);\n\n    //console.log(\"currentRole : \" , this.state.currentUser[0].role);\n\n   if (this.state.currentUser!==\"\") {\n    console.log(\"currentRole : \" , this.state.currentUser[0].role);\n    if (this.state.loggedIn == true && this.state.currentUser[0].role ==1){ \n      return  <Redirect to=\"/HomeAdmin\"/>\n     }\n     \n     if (this.state.loggedIn == true && this.state.currentUser[0].role==0){   // redirect to Admin/User\n      return  <Redirect to=\"/HomeUser\"/>\n     }\n    }\n    \n    //  if (this.state.loggedIn == false){   // redirect to Login/Registration\n    //   return  <Redirect to=\"/Login\"/>\n    //  }\n        \n    return (\n   \n      <div className=\"Main\">                  \n              <Container className=\"App\">\n                 <div className=\"row\">\n                 <div className=\"loginBox col-md-4\">\n                   <h2 className=\"mb-2\">REGISTRATION</h2>\n                   <AvForm className=\"form\">\n                   <Col>\n                       <FormGroup>\n                       <Label className=\"lableBox\" for=\"firstName\">Enter first name</Label>\n                         <AvField\n                           type=\"text\"\n                           name=\"firstName\"\n                           id=\"firstName\"\n                           placeholder=\"Enter first name\"\n                           onChange = {(event,target) => this.setState({firstName:event.target.value})}\n                           value={this.state.firstName}\n                           errorMessage=\"Invalid name\" validate={{\n                           required: {value: true},\n                          pattern: {value: '^[A-Za-z]+$'},\n                          minLength: {value: 2},\n                          maxLength: {value: 10}\n}} \n                         />\n                       </FormGroup>\n                     </Col>\n\n                     <Col>\n                       <FormGroup>\n                       <Label className=\"lableBox\" for=\"lastName\">Enter last name</Label>\n                         <AvField\n                           type=\"text\"\n                           name=\"lastName\"\n                           id=\"lastName\"\n                           placeholder=\"Enter last name\"\n                           onChange = {(event,target) => this.setState({lastName:event.target.value})}\n                           value={this.state.lastName}\n                           errorMessage=\"Invalid name\" validate={{\n                           required: {value: true},\n                          pattern: {value: '^[A-Za-z]+$'},\n                          minLength: {value: 2},\n                          maxLength: {value: 10}\n}} \n                         />\n                       </FormGroup>\n                     </Col>\n\n                     <Col>\n                       <FormGroup>\n                       <Label className=\"lableBox\" for=\"userName\">Enter user name (email)</Label>\n                         <AvField\n                           type=\"email\"\n                           name=\"userName\"\n                           id=\"userName\"\n                           placeholder=\"Enter user name (email)\"\n                           onChange = {(event,target) => this.setState({userName:event.target.value})}\n                           value={this.state.userName}\n                           errorMessage=\"Invalid name\" validate={{\n                           required: {value: true}\n                          //  pattern: {value: '^[A-Za-z0-9]+$'},\n                          //  minLength: {value: 6},\n                          //  maxLength: {value: 16}\n}} \n                         />\n                       </FormGroup>\n                     </Col>\n                     <Col>\n                       <FormGroup>\n                         <Label className=\"lableBox\" for=\"Password\">Password (6 symbols)</Label>\n                         <AvField\n                           type=\"password\"\n                           name=\"password\"\n                           id=\"password\"\n                           placeholder=\"******\"\n                           onChange = {(event,target) => this.setState({password:event.target.value})}\n                           value={this.state.password}\n                           errorMessage=\"Invalid password\" validate={{\n                            required: {value: true},\n                            pattern: {value: '^[A-Za-z0-9]+$'},\n                            minLength: {value: 6},\n                            maxLength: {value: 6}\n          }} />\n                        \n                       </FormGroup>\n                     </Col>\n              <button type=\"submit\" className=\"offset-5\" onClick={() =>this.handleClick()}>Sing In</button>\n                \n                   </AvForm>\n                   </div>\n                   </div>\n                 </Container>\n                 {/* <Route path=\"/Registration\" exact component={Registration} />\n                 <Route path=\"/HomeUser\" exact component={HomeUser} />\n                 <Route path=\"/HomeAdmin\" exact component={HomeAdmin} /> */}\n                 {/* <Route path=\"/\" exact component={Login_Project} /> */}\n                 </div>  \n              \n    );\n}\n}\n\nexport default ModalLogin"]},"metadata":{},"sourceType":"module"}