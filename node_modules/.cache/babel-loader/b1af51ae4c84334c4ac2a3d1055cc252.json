{"ast":null,"code":"import _classCallCheck from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/annapryadko/Desktop/FullStack/React/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Table from './Components/Table';\nimport Input from './Components/Input';\nimport axios from \"axios\";\nimport socketIOClient from \"socket.io-client\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      age: \"\",\n      mail: \"\",\n      id: \"\",\n      foundStudents: [],\n      selectStudent: [],\n      endpoint: \"localhost:4002\",\n      color: 'orange',\n      studentForInsert: {}\n    };\n\n    _this.ButtonInsert = function () {\n      // let studentForInsert={};\n      var name = _this.state.name;\n      var age = _this.state.age;\n      var mail = _this.state.mail; // this.setState({ studentForInsert: studentForInsert });\n\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('insert student', name, age, mail); // change 'red' to this.state.color \n    };\n\n    _this.componentDidMount = function () {\n      _this.getAllStudents();\n\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.on('insert student', function (studentForInsert) {\n        var AllStudOld = _this.state.foundStudents;\n        AllStudOld.push(studentForInsert);\n\n        _this.setState({\n          foundStudents: AllStudOld\n        });\n\n        console.log(studentForInsert);\n      });\n    };\n\n    _this.getAllStudents = function () {\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.get(\"http://localhost:4002/getStudents\").then(function (response) {\n        console.log(response.data); //console.log(self.state.arrPosts);\n\n        self.setState({\n          foundStudents: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleChange = function (event, type) {\n      if (type === 0) {\n        _this.setState({\n          name: event.target.value\n        });\n\n        console.log(\"change\", _this.state.name);\n      }\n\n      if (type === 1) {\n        _this.setState({\n          age: event.target.value\n        });\n\n        console.log(\"change\", _this.state.age);\n      }\n\n      if (type === 2) {\n        _this.setState({\n          mail: event.target.value\n        });\n\n        console.log(\"change\", _this.state.mail);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // printRes=()=>{\n    //   let printArray = [];\n    //       for (let item of this.state.foundStudents)\n    //       {\n    //         printArray.push(<tr>\n    //                   <td>{item.name}</td>\n    //                   <td>{item.age}</td>\n    //                   <td>{item.mail}</td>\n    //               </tr>)\n    //       }\n    //   return printArray; \n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"INSERT\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"All students: \")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Table, {\n        data: this.state.foundStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/FullStack/React/my-app/src/App.js"],"names":["React","Component","Table","Input","axios","socketIOClient","App","state","name","age","mail","id","foundStudents","selectStudent","endpoint","color","studentForInsert","ButtonInsert","socket","emit","componentDidMount","getAllStudents","on","AllStudOld","push","setState","console","log","self","get","then","response","data","catch","error","handleChange","event","type","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Table from './Components/Table';\nimport Input from './Components/Input';\nimport axios from \"axios\";\n\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  state = {\n    name:\"\",\n    age:\"\",\n    mail:\"\",\n    id:\"\",\n    foundStudents: [],\n    selectStudent:[],\n    endpoint: \"localhost:4002\",\n    color: 'orange',\n    studentForInsert: {},\n\n  };\n\n\n  // sending sockets\n  ButtonInsert = () => {\n    // let studentForInsert={};\n   let name=this.state.name;\n    let age=this.state.age;\n    let mail=this.state.mail;\n    // this.setState({ studentForInsert: studentForInsert });\n\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit('insert student', name,age,mail) // change 'red' to this.state.color \n    \n  }\n  \n// send=()=>{\n//   const socket = socketIOClient(this.state.endpoint);\n//   socket.emit('insert student', this.state.studentForInsert) // change 'red' to this.state.color \n// }\n\ncomponentDidMount=()=>{\n  this.getAllStudents();\n  \n  const socket = socketIOClient(this.state.endpoint);\n    \n      socket.on('insert student', (studentForInsert) => {\n          \n          let AllStudOld=this.state.foundStudents;\n          AllStudOld.push(studentForInsert)\n         \n          this.setState({ foundStudents: AllStudOld });\n\n          console.log(studentForInsert);\n          \n      })\n\n}\n\ngetAllStudents=()=>{\n  var self=this;\n  axios.get(`http://localhost:4002/getStudents`)\n  .then(function(response){\n    \n    console.log(response.data);\n    //console.log(self.state.arrPosts);\n   self.setState({ foundStudents: response.data });\n  })\n  .catch(function(error){\n     console.log(error);\n  });\n}\n\n  handleChange=(event,type)=> {\n    if (type === 0){\n      this.setState({name: event.target.value});\n      console.log(\"change\",this.state.name)\n    }\n    if (type === 1) {\n      this.setState({age: event.target.value});\n      console.log(\"change\",this.state.age)\n    }\n    if (type === 2) {\n      this.setState({mail: event.target.value});\n      console.log(\"change\",this.state.mail)\n    }\n  }\n\n  // printRes=()=>{\n  \n  //   let printArray = [];\n  //       for (let item of this.state.foundStudents)\n  //       {\n  //         printArray.push(<tr>\n  //                   <td>{item.name}</td>\n  //                   <td>{item.age}</td>\n  //                   <td>{item.mail}</td>\n  //               </tr>)\n  //       }\n  //   return printArray; \n  // }\n  \n  render() {\n    return (\n      <div className=\"container\">\n      <h1>INSERT</h1>\n\n\n\n        <div className=\"row\">\n\n        <Input></Input>\n        \n          {/* <label htmlFor=\"name\">\n            Please, enter the name.\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={(event) => this.handleChange(event,0)}\n            value={this.state.name}\n          />\n         </div> \n         <div className=\"row\">\n          <label htmlFor=\"age\">\n            Please, enter the age.\n          </label>\n          <input\n            type=\"number\"\n            id=\"age\"\n            onChange={(event) => this.handleChange(event,1)}\n            value={this.state.age}\n          />\n          </div>\n          <div className=\"row\">\n          <label htmlFor=\"mail\">\n            Please, enter the mail.\n          </label>\n          <input\n            type=\"text\"\n            id=\"mail\"\n            onChange={(event) => this.handleChange(event,2)}\n            value={this.state.mail}\n          /> */}\n         </div>\n          {/* <button type=\"button\" className=\"btn btn-primary p-3 m-3\" onClick={() =>this.ButtonInsert()}>Insert</button>\n        */}\n        <div className=\"row\">\n        <h3>All students: </h3>\n        </div>\n        <div className=\"row\">\n                \n          <Table data={this.state.foundStudents}></Table>\n                \n        </div> \n       \n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}