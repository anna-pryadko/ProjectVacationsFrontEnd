{"ast":null,"code":"import _classCallCheck from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/annapryadko/Desktop/FullStack/React/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/annapryadko/Desktop/FullStack/React/my-app/src/App.js\";\n// Updated. Thanks to: Paul Luna\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      endpoint: \"localhost:4002\",\n      color: 'orange'\n    };\n\n    _this.send = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('change color', _this.state.color); // change 'red' to this.state.color\n    };\n\n    _this.setColor = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      setInterval(_this.send(), 1000);\n      socket.on('change color', function (col) {\n        document.body.style.backgroundColor = col;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.send();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Change Color\"), React.createElement(\"button\", {\n        id: \"blue\",\n        onClick: function onClick() {\n          return _this2.setColor('blue');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(\"button\", {\n        id: \"red\",\n        onClick: function onClick() {\n          return _this2.setColor('red');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Red\"), React.createElement(\"button\", {\n        id: \"green\",\n        onClick: function onClick() {\n          return _this2.setColor('green');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Green\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //https://codeburst.io/isomorphic-web-app-react-js-express-socket-io-e2f03a469cd3\n//// testing for socket connections\n//const socket = socketIOClient(this.state.endpoint);","map":{"version":3,"sources":["/Users/annapryadko/Desktop/FullStack/React/my-app/src/App.js"],"names":["React","Component","socketIOClient","App","state","endpoint","color","send","socket","emit","setColor","setState","componentDidMount","setInterval","on","col","document","body","style","backgroundColor","textAlign"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,gBADJ;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAMRC,I,GAAO,YAAM;AACX,UAAMC,MAAM,GAAGN,cAAc,CAAC,MAAKE,KAAL,CAAWC,QAAZ,CAA7B;AACAG,MAAAA,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4B,MAAKL,KAAL,CAAWE,KAAvC,EAFW,CAEmC;AAC/C,K;;UAIDI,Q,GAAW,UAACJ,KAAD,EAAW;AACpB,YAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;UAEDM,iB,GAAoB,YAAM;AACtB,UAAMJ,MAAM,GAAGN,cAAc,CAAC,MAAKE,KAAL,CAAWC,QAAZ,CAA7B;AACAQ,MAAAA,WAAW,CAAC,MAAKN,IAAL,EAAD,EAAc,IAAd,CAAX;AAEAC,MAAAA,MAAM,CAACM,EAAP,CAAU,cAAV,EAA0B,UAACC,GAAD,EAAS;AAC/BC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCJ,GAAtC;AACH,OAFD;AAGH,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACb,IAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACG,QAAL,CAAc,MAAd,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,QAAL,CAAc,KAAd,CAAN;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,QAAL,CAAc,OAAd,CAAN;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;AAQD;;;;EApCeT,S;;AAsClB,eAAeE,GAAf,C,CAIA;AAEA;AACA","sourcesContent":["// Updated. Thanks to: Paul Luna\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nclass App extends Component {\n  state = {\n    endpoint: \"localhost:4002\",\n    color: 'orange'\n  };\n\n  // sending sockets\n  send = () => {\n    const socket = socketIOClient(this.state.endpoint);\n    socket.emit('change color', this.state.color) // change 'red' to this.state.color\n  }\n  ///\n\n  // adding the function\n  setColor = (color) => {\n    this.setState({ color })\n  }\n\n  componentDidMount = () => {\n      const socket = socketIOClient(this.state.endpoint);\n      setInterval(this.send(), 1000)\n    \n      socket.on('change color', (col) => {\n          document.body.style.backgroundColor = col\n      })\n  }\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <button onClick={() => this.send() }>Change Color</button>\n        <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button>\n        <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n        <button id=\"green\" onClick={() => this.setColor('green')}>Green</button>\n      </div>\n    )\n  }\n}\nexport default App;\n\n\n\n//https://codeburst.io/isomorphic-web-app-react-js-express-socket-io-e2f03a469cd3\n\n//// testing for socket connections\n//const socket = socketIOClient(this.state.endpoint);\n"]},"metadata":{},"sourceType":"module"}