{"ast":null,"code":"var _jsxFileName = \"/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\"; //import Registration from './MyReg';\n\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link, Switch } from 'react-router-dom'; // import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import AppBar from 'material-ui/AppBar';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import TextField from 'material-ui/TextField';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      errorName: \"\",\n      errorPassword: \"\",\n      isLoginSuccess: \"\",\n      foundUsers: [],\n      isLoggedIn: false,\n      isAdmin: false,\n      checkCookie: \"\",\n      cookieArr: []\n    };\n\n    this.componentDidMount = () => {\n      {\n        axios.get(\"http://localhost:5000/getAllUsers\").then(response => {\n          this.setState({\n            foundUsers: response.data\n          });\n          console.log(\"this.state.getAllUsers\", this.state.foundUsers);\n          localStorage.AllUsers = JSON.stringify(this.state.foundUsers);\n        }).catch(error => {\n          console.log(\"error: \", error);\n        });\n      }\n    };\n\n    this.checkLogin = () => {\n      if (this._isFormValid()) {\n        let password = this.state.password;\n        let userName = this.state.userName;\n        let LocalUsersArr = JSON.parse(localStorage.AllUsers);\n\n        for (let item of LocalUsersArr) {\n          if (item.user_name == userName && item.password == password) {\n            this.setState({\n              isLoggedIn: true\n            });\n\n            if (item.role == \"1\") {\n              this.setState({\n                isAdmin: true\n              });\n              console.log(\"isAdmin\", this.state.isAdmin);\n              localStorage.UserID = JSON.stringify(item.id); //save user id to localstorage\n            } else {\n              this.setState({\n                isAdmin: false\n              });\n              console.log(\"isAdmin\", this.state.isAdmin);\n              localStorage.UserID = JSON.stringify(item.id);\n            }\n          }\n        }\n      } else {\n        if (this.state.errorName) {\n          alert(this.state.errorName);\n        }\n\n        if (this.state.errorPassword) {\n          alert(this.state.errorPassword);\n        }\n      }\n    };\n  }\n\n  //Validation userName and password\n  _isFormValid() {\n    return this._isNameValid(this.state.username) && this._isPassValid(this.state.password);\n  }\n\n  _isNameValid(username) {\n    let isValid = true;\n    let errorName = '';\n\n    if (username === '') {\n      errorName = 'Name is empty!';\n      isValid = false;\n      this.setState({\n        errorName: errorName\n      });\n      return isValid;\n    }\n\n    if (username.length < 3) {\n      errorName = 'Name must have 3 symbols minimum!';\n      isValid = false;\n      this.setState({\n        errorName: errorName\n      });\n      return isValid;\n    }\n  }\n\n  _isPassValid(password) {\n    let isValid = true;\n    let errorPassword = '';\n\n    if (password === '') {\n      errorPassword = 'Password is empty!';\n      isValid = false;\n      this.setState({\n        errorName: errorPassword\n      });\n      return isValid;\n    }\n  } // Check Login  \n\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Your name\",\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      onChange: (event, target) => this.setState({\n        username: event.target.value\n      }) // onChange={this.changeName}\n      ,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Your password\",\n      icon: \"lock\",\n      group: true,\n      type: \"password\",\n      validate: true,\n      onChange: (event, target) => this.setState({\n        password: event.target.value\n      }) // onChange={this.changePassword}\n      ,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"cyan\",\n      type: \"submit\",\n      onClick: this.checkLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"LOGIN\"))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"font-weight-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Not a member? \", React.createElement(Link, {\n      to: \"/registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Sign Up\"))))))))), React.createElement(Route, {\n      path: \"/registration\",\n      exact: true,\n      component: Registration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Login/Login.js"],"names":["React","Component","axios","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","MDBModalFooter","BrowserRouter","Route","Link","Switch","Login","state","userName","password","errorName","errorPassword","isLoginSuccess","foundUsers","isLoggedIn","isAdmin","checkCookie","cookieArr","componentDidMount","get","then","response","setState","data","console","log","localStorage","AllUsers","JSON","stringify","catch","error","checkLogin","_isFormValid","LocalUsersArr","parse","item","user_name","role","UserID","id","alert","_isNameValid","username","_isPassValid","isValid","length","render","event","target","value","Registration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n//import Registration from './MyReg';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody,MDBModalFooter } from 'mdbreact';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Route, Link, Switch,} from 'react-router-dom';\n\n\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import AppBar from 'material-ui/AppBar';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import TextField from 'material-ui/TextField';\n\nclass Login extends Component {\n  state={\n    userName:\"\",\n    password:\"\",\n\n    errorName:\"\",\n    errorPassword:\"\",\n\n    isLoginSuccess:\"\",\n\n    foundUsers:[],\n    isLoggedIn: false,\n    isAdmin:false,\n\n    checkCookie:\"\",\n    cookieArr:[],\n   }\n\n     componentDidMount=()=>{\n      {   \n      axios.get(`http://localhost:5000/getAllUsers`)\n      .then(response => {  \n        this.setState({foundUsers: response.data});\n        console.log(\"this.state.getAllUsers\",this.state.foundUsers)\n         localStorage.AllUsers = JSON.stringify(this.state.foundUsers); \n         })\n      .catch(error => {\n        console.log(\"error: \", error);\n         })  \n        }\n       }\n\n//Validation userName and password\n\n_isFormValid() {\n  return this._isNameValid(this.state.username) && this._isPassValid(this.state.password)\n}\n\n_isNameValid(username) {\n  let isValid=true;\n  let errorName='';\n\n  if (username==='') {\n    errorName='Name is empty!';\n    isValid=false;\n    this.setState({errorName:errorName});\n    return isValid;\n  } \n\n  if (username.length < 3) {\n    errorName='Name must have 3 symbols minimum!';\n    isValid=false;\n    this.setState({errorName:errorName});\n    return isValid;\n  } \n}\n\n_isPassValid(password) {\n  let isValid=true;\n  let errorPassword='';\n\n  if (password==='') {\n    errorPassword='Password is empty!';\n    isValid=false;\n    this.setState({errorName:errorPassword});\n    return isValid;\n  } \n}\n\n      \n// Check Login  \n\n       checkLogin=()=>{ \n        \n        if (this._isFormValid()) {\n\n        let password=this.state.password;\n        let userName=this.state.userName;\n        let LocalUsersArr = JSON.parse(localStorage.AllUsers)  \n        for (let item of LocalUsersArr) {\n          if(item.user_name==userName && item.password==password){   \n            this.setState({isLoggedIn:true})    \n            \n            if (item.role==\"1\")\n                 {\n                  this.setState({isAdmin: true});\n                  console.log(\"isAdmin\",this.state.isAdmin)\n                      localStorage.UserID=JSON.stringify(item.id); //save user id to localstorage\n                 } \n                 else \n                   {\n                     this.setState({isAdmin: false});\n                     console.log(\"isAdmin\",this.state.isAdmin)\n                     localStorage.UserID=JSON.stringify(item.id); \n                   }          \n                  }   \n                 }\n                } \n                else {\n                  if (this.state.errorName) {alert(this.state.errorName);}\n                  if (this.state.errorPassword) {alert(this.state.errorPassword);}\n                 }\n\n              }\n              \n\n    render() {\n        return (\n          <BrowserRouter>\n          <div>\n            <MDBContainer>\n              <MDBRow>\n                <MDBCol md=\"6\">\n                  <MDBCard>\n                    <MDBCardBody>\n                      <form>\n                        <p className=\"h4 text-center py-4\">Login</p>\n                        <div className=\"grey-text\">\n                          <MDBInput\n                            label=\"Your name\"\n                            icon=\"user\"\n                            group\n                            type=\"text\"\n                            validate\n                            error=\"wrong\"\n                            success=\"right\"\n                            onChange = {(event,target) => this.setState({username:event.target.value})}\n                            // onChange={this.changeName}\n                            value={this.state.username}\n                          />\n                          <MDBInput\n                            label=\"Your password\"\n                            icon=\"lock\"\n                            group\n                            type=\"password\"\n                            validate\n                            onChange = {(event,target) => this.setState({password:event.target.value})}\n                            // onChange={this.changePassword}\n                            value={this.state.password}\n                          />\n                        </div>\n                        <div className=\"text-center py-4 mt-3\">\n                          <MDBBtn color=\"cyan\" type=\"submit\" onClick={this.checkLogin}>\n                            LOGIN\n                          </MDBBtn>\n                        </div>\n                      </form>\n                      <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <p>Not a member? <Link to=\"/registration\">Sign Up</Link></p>\n                  {/* <p>Forgot Password?</p> */}\n                </div>\n               \n              </MDBModalFooter>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            \n            </MDBContainer>\n            <Route path=\"/registration\" exact component={Registration} />\n            </div>\n            </BrowserRouter>\n          );\n        };\n      }   \n  export default Login;\n  "]},"metadata":{},"sourceType":"module"}