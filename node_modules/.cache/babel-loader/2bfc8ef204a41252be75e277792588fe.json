{"ast":null,"code":"var _jsxFileName = \"/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Charts/Charts.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2'; //i can import any kind of charts from this library\n\nimport { Route, Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { isNull } from 'util';\n\nclass Chart_project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      {\n        axios.get(\"http://localhost:5000/getVacationsForChart\").then(response => {\n          this.setState({\n            AllVacations: response.data\n          }); //  console.log(\"this.state.AllVacations\",this.state.AllVacations)\n\n          let allLocationsArr = [];\n          let followersArr = [];\n          let sortLocationsArr = [];\n          let sortFollowersArr = [];\n          let found = false;\n          let FollowingCounter = 0;\n\n          for (let item of this.state.AllVacations) {\n            //first For to sort all locations from users\n            allLocationsArr.push(item.location);\n            followersArr.push(item.uId);\n          }\n\n          for (let item1 of allLocationsArr) //second For to sort locations no duplicate for lables\n          {\n            if (sortLocationsArr.length == 0) {\n              sortLocationsArr.push(item1);\n            } else {\n              for (let item2 of sortLocationsArr) {\n                if (item1 === item2) {\n                  found = true;\n                }\n              }\n\n              if (found == false) {\n                sortLocationsArr.push(item1);\n              }\n\n              found = false;\n            }\n          }\n\n          this.state.chartData.labels = sortLocationsArr; // push to chart locations headers after sort\n\n          for (let item3 of sortLocationsArr) {\n            //thired For to count how many followers for each loaction\n            FollowingCounter = 0;\n\n            for (let item4 of allLocationsArr) {\n              if (item3 === item4) {\n                FollowingCounter += 1;\n              }\n            }\n\n            sortFollowersArr.push(FollowingCounter);\n            console.log(\"sortFollowersArr : \", sortFollowersArr);\n            console.log(\"sortLocationsArr : \", sortLocationsArr);\n          }\n\n          this.setState({\n            chartData: {\n              labels: sortLocationsArr,\n              lablesColor: 'white',\n              datasets: [{\n                label: 'Followers',\n                data: sortFollowersArr,\n                backgroundColor: ['rgba(255, 255, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(153, 102, 255, 1)', 'rgba(75, 192, 192, 1)']\n              }]\n            }\n          });\n        }).catch(error => {\n          console.log(\"error: \", error);\n        });\n      }\n    };\n\n    this.state = {\n      sortFollowersArr: [],\n      AllVacations: [],\n      chartData: {}\n    };\n  }\n\n  render() {\n    if (this.state.chartData.labels == \"\") {\n      //if lables stiil empty go ti componentDidMount\n      this.componentDidMount();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"ml-4 mr-4 mt-2 btn btn-outline-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Back to Login\")), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"mt-2 btn btn-outline-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/HomeAdmin\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Back to Admin page\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Number of vacation followers\")), React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.state.chartData,\n      width: 100,\n      height: 600,\n      options: {\n        maintainAspectRatio: false,\n        // title:{\n        // display:true,\n        // text:'here put title',\n        // fontSize:40,\n        // fontColor:'white'\n        // } ,\n        legend: {\n          display: true,\n          position: 'right',\n          labels: {\n            fontColor: 'white'\n          }\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              fontColor: \"white\",\n              fontSize: 18,\n              stepSize: 1,\n              beginAtZero: true\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              fontColor: \"white\",\n              fontSize: 25,\n              stepSize: 1\n            }\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Chart_project; //   for (let item3 of followersArr)  //thired For to sort Users no duplicate for data in chart\n//   {\n//     // console.log(\"item1\",item1)\n//      if(sortFollowersArr.length==0){\n//       sortFollowersArr.push(item3)\n//       } \n//      else{\n//         for(let item4 of sortFollowersArr){\n//             if(item3===item4){\n//                 found1=true; \n//                }\n//               } \n//            if(found1==false){\n//               sortFollowersArr.push(item3)\n//            }\n//            found1=false;\n//             }\n//        }\n//        console.log(\"followersArr = \",followersArr) \n//        console.log(\"sortFollowersArr = \",sortFollowersArr) \n//        this.state.chartData.data=sortFollowersArr;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Charts/Charts.js"],"names":["React","Component","Bar","Line","Pie","Route","Link","axios","isNull","Chart_project","constructor","props","componentDidMount","get","then","response","setState","AllVacations","data","allLocationsArr","followersArr","sortLocationsArr","sortFollowersArr","found","FollowingCounter","item","state","push","location","uId","item1","length","item2","chartData","labels","item3","item4","console","log","lablesColor","datasets","label","backgroundColor","catch","error","render","textAlign","color","maintainAspectRatio","legend","display","position","fontColor","scales","yAxes","ticks","fontSize","stepSize","beginAtZero","xAxes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Bar , Line , Pie} from 'react-chartjs-2' //i can import any kind of charts from this library\nimport {  Route, Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { isNull } from 'util';\n\nclass Chart_project extends Component {\n   constructor(props){\n   super(props);\n   this.state={\n    sortFollowersArr:[],\n    AllVacations:[],\n    chartData:{}\n              }\n             }  \n \n componentDidMount=()=>{\n    {     \n    axios.get(`http://localhost:5000/getVacationsForChart`)\n    .then(response => {  \n     this.setState({AllVacations: response.data});\n    //  console.log(\"this.state.AllVacations\",this.state.AllVacations)\n    let allLocationsArr = [] \n    let followersArr=[];\n    let sortLocationsArr = [] \n    let sortFollowersArr = [] \n    let found=false;\n    let FollowingCounter=0;\n\n    \n    for (let item of this.state.AllVacations){ //first For to sort all locations from users\n     allLocationsArr.push(item.location)  \n     followersArr.push(item.uId)            \n      }\n    \n      for (let item1 of allLocationsArr)  //second For to sort locations no duplicate for lables\n      {\n         if(sortLocationsArr.length==0){\n          sortLocationsArr.push(item1)\n          } \n         else{\n            for(let item2 of sortLocationsArr){\n                if(item1===item2){\n                    found=true; \n                   }\n                  } \n               if(found==false){\n               sortLocationsArr.push(item1)\n               }\n               found=false;\n                }\n              }\n      this.state.chartData.labels=sortLocationsArr; // push to chart locations headers after sort\n\n      for (let item3 of sortLocationsArr){       //thired For to count how many followers for each loaction\n        FollowingCounter=0;\n        for (let item4 of allLocationsArr){\n          if(item3===item4){\n              FollowingCounter+=1;\n            }\n            }\n            sortFollowersArr.push(FollowingCounter)\n            console.log(\"sortFollowersArr : \", sortFollowersArr);\n            console.log(\"sortLocationsArr : \", sortLocationsArr);\n      }\n      this.setState({ chartData:{\n        labels:sortLocationsArr,\n        lablesColor:'white',\n              datasets:[\n                  {\n                   label:'Followers',\n                   data: sortFollowersArr,\n                   backgroundColor: [\n                    'rgba(255, 255, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(75, 192, 192, 1)',\n                   ],\n                  }\n                ]\n               }})\n             })\n    .catch(error => {\n      console.log(\"error: \", error);\n       })  \n      }\n     }\n\n\n  render () {\n      if(this.state.chartData.labels==\"\"){ //if lables stiil empty go ti componentDidMount\n          this.componentDidMount()\n      }\n    return (\n    <div>\n        <div style={{textAlign: \"center\" }}>\n    <button type=\"button\" class=\"ml-4 mr-4 mt-2 btn btn-outline-success\"><Link to=\"/\" style={{color: \"white\"}}>Back to Login</Link></button>   \n    <button type=\"button\" class=\"mt-2 btn btn-outline-success\"><Link to=\"/HomeAdmin\" style={{color: \"white\"}}>Back to Admin page</Link></button>\n        </div>\n        <div>\n               <h1 style={{textAlign: \"center\" , color:\"white\"}} >Number of vacation followers</h1>\n            </div>\n     <div className=\"chart\">\n      <Bar\n  data={this.state.chartData}\n  width={100}\n  height={600}\n  options={{ maintainAspectRatio: false ,\n        // title:{\n        // display:true,\n        // text:'here put title',\n        // fontSize:40,\n        // fontColor:'white'\n        // } ,\n        legend:{\n            display:true,\n            position:'right',\n            labels:{\n                fontColor:'white'\n            }\n        },\n        scales: {\n            yAxes: [{\n                ticks: {\n                    fontColor: \"white\",\n                    fontSize: 18,\n                    stepSize: 1,\n                    beginAtZero: true\n                }\n            }],\n            xAxes: [{\n                ticks: {\n                    fontColor: \"white\",\n                    fontSize: 25,\n                    stepSize: 1,\n                }\n            }]\n        }\n  }}\n/>\n     </div>\n     </div>\n    )\n  }\n}\nexport default Chart_project;\n\n\n    //   for (let item3 of followersArr)  //thired For to sort Users no duplicate for data in chart\n    //   {\n    //     // console.log(\"item1\",item1)\n    //      if(sortFollowersArr.length==0){\n    //       sortFollowersArr.push(item3)\n    //       } \n    //      else{\n    //         for(let item4 of sortFollowersArr){\n    //             if(item3===item4){\n    //                 found1=true; \n    //                }\n    //               } \n    //            if(found1==false){\n    //               sortFollowersArr.push(item3)\n    //            }\n    //            found1=false;\n    //             }\n    //        }\n    //        console.log(\"followersArr = \",followersArr) \n    //        console.log(\"sortFollowersArr = \",sortFollowersArr) \n    //        this.state.chartData.data=sortFollowersArr;"]},"metadata":{},"sourceType":"module"}