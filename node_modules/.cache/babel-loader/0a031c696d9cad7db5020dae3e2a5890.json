{"ast":null,"code":"var _jsxFileName = \"/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Main/Main.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch, Redirect } from 'react-router-dom';\nimport { MDBFormInline, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView } from 'mdbreact';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from \"axios\";\nimport Jumbotron from '../Jumbotron/Jumbotron'; //import Login from '../Login/Login';\n\nimport Registration from '../Registration/Registration';\nimport HomeUser from '../Home/HomeUser';\nimport HomeAdmin from '../Home/HomeAdmin';\nimport ModalLogin from '../ModalLogin/ModalLogin'; //import reducer from '../../reducers';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checkCookie: \"\",\n      userRole: \"\",\n      currentUser: {}\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.currentUser) {\n        let currUser = JSON.parse(localStorage.currentUser);\n        this.setState({\n          currentUser: currUser\n        });\n        this.setState({\n          userRole: currUser.role\n        });\n      }\n\n      var self = this;\n      axios.get(\"http://localhost:5000/checkCookie\", {\n        withCredentials: true\n      }).then(function (response) {\n        console.log('checkCookie', response.data); // 1 or 0\n\n        self.setState({\n          checkCookie: response.data\n        });\n      }).catch(function (error) {\n        console.log(\"Error\", error);\n      });\n      console.log(this.state.checkCookie);\n    };\n  }\n\n  render() {\n    console.log(\"checkCookie\", this.state.checkCookie);\n    let loggedIn = this.state.checkCookie === '1';\n    console.log(\"LOGGWD\", loggedIn);\n    console.log(\"userRole\", this.state.userRole);\n\n    if (loggedIn == true && this.state.userRole == '0') {\n      return React.createElement(Redirect, {\n        to: \"/HomeAdmin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    if (loggedIn == true && this.state.userRole == '1') {\n      // redirect to Admin/User\n      return React.createElement(Redirect, {\n        to: \"/HomeUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n\n    if (loggedIn == false) {\n      // redirect to Login/Registration\n      return React.createElement(Redirect, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Main/Main.js"],"names":["React","Component","Route","Link","Switch","Redirect","MDBFormInline","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBContainer","MDBMask","MDBView","BrowserRouter","Router","axios","Jumbotron","Registration","HomeUser","HomeAdmin","ModalLogin","Main","state","checkCookie","userRole","currentUser","componentDidMount","localStorage","currUser","JSON","parse","setState","role","self","get","withCredentials","then","response","console","log","data","catch","error","render","loggedIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, Switch,Redirect} from 'react-router-dom';\nimport { MDBFormInline, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView } from 'mdbreact';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport Jumbotron from '../Jumbotron/Jumbotron';\n//import Login from '../Login/Login';\nimport Registration from '../Registration/Registration';\nimport HomeUser from '../Home/HomeUser';\nimport HomeAdmin from '../Home/HomeAdmin';\nimport ModalLogin from '../ModalLogin/ModalLogin';\n\n\n//import reducer from '../../reducers';\n\nclass Main extends Component {\n    state = {\n\n      checkCookie:\"\",\n      userRole:\"\",\n      \n      currentUser:{},\n\n    };\n\n      componentDidMount=()=>{\n        \n        if (localStorage.currentUser) {\n          let currUser = JSON.parse(localStorage.currentUser) \n\n          this.setState({ currentUser: currUser });\n          this.setState({ userRole: currUser.role });\n          \n     }\n\n        var self=this;\n        axios.get(`http://localhost:5000/checkCookie`,{withCredentials:true})\n        .then(function(response){\n          \n         console.log('checkCookie',response.data); // 1 or 0\n        \n         self.setState({ checkCookie: response.data });\n\n        })\n        .catch(function(error){\n           console.log(\"Error\",error);\n        });\n        console.log(this.state.checkCookie);\n    \n      }\n      \n  render() {\n\n  console.log(\"checkCookie\", this.state.checkCookie)\n\n   let loggedIn = this.state.checkCookie === '1'\n\n   console.log(\"LOGGWD\", loggedIn)\n   console.log(\"userRole\", this.state.userRole)\n\n    if (loggedIn == true && this.state.userRole =='0'){ \n      return  <Redirect to=\"/HomeAdmin\"/>\n     }\n     \n     if (loggedIn == true && this.state.userRole =='1'){   // redirect to Admin/User\n      return  <Redirect to=\"/HomeUser\"/>\n     }\n    \n     if (loggedIn == false){   // redirect to Login/Registration\n      return  <Redirect to=\"/Login\"/>\n     }\n    \n    return (\n      <div>\n\n     </div>\n    \n    );\n  }\n  }\n  export default Main;\n  "]},"metadata":{},"sourceType":"module"}