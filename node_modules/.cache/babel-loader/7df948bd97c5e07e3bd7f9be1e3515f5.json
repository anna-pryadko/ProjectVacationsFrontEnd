{"ast":null,"code":"var _jsxFileName = \"/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\"; //import Registration from './MyReg';\n\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route, Link, Switch, Redirect } from 'react-router-dom';\nimport Registration from '../Registration/Registration';\nimport Home from '../Home/Home'; // import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import AppBar from 'material-ui/AppBar';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import TextField from 'material-ui/TextField';\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      errorName: \"\",\n      errorPassword: \"\",\n      currentUser: {},\n      isLoginSuccess: \"\",\n      foundUsers: [],\n      isLoggedIn: false,\n      isAdmin: false,\n      checkCookie: \"\",\n      cookieArr: [] //  componentDidMount=()=>{\n      //   {   \n      //     var self=this;\n      //     axios.get(`http://localhost:4000/checkLogin?name=${name}&password=${password}`,{withCredentials:true})\n      //     .then(function(response){\n      //       console.log('isLoggedIn',response.data);\n      //      self.setState({ isLoggedIn: response.data });\n      //     })\n      //     .catch(function(error){\n      //        console.log(error);\n      //     });\n      //     }\n      //    }\n      //Validation userName and password\n\n    };\n\n    this.handleClick = () => {\n      console.log('checkLogin');\n\n      let isValud = this._isFormValid();\n\n      if (isValud == true) {\n        console.log('Valid');\n        let password = this.state.password;\n        let userName = this.state.userName;\n        var self = this;\n        axios.get(\"http://localhost:5000/checkLogin?name=\".concat(userName, \"&password=\").concat(password), {\n          withCredentials: true\n        }).then(function (response) {\n          console.log('currentUser', response.data);\n          self.setState({\n            currentUser: response.data\n          });\n          this.setLogin();\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        if (this.state.errorName) {\n          alert(this.state.errorName);\n        }\n\n        if (this.state.errorPassword) {\n          alert(this.state.errorPassword);\n        }\n      }\n    };\n\n    this.setLogin = () => {\n      let localUser = this.state.currentUser;\n\n      if (localUser !== {}) {\n        localStorage.currentUser = JSON.stringify(localUser); //save user to localstorage \n\n        this.setState({\n          isLoggedIn: true\n        });\n\n        if (localUser.role == \"1\") {\n          this.setState({\n            isAdmin: true\n          });\n          console.log(\"isAdmin\", this.state.isAdmin);\n        } else {\n          this.setState({\n            isAdmin: false\n          });\n          console.log(\"isAdmin\", this.state.isAdmin);\n        }\n      } else {\n        alert('Name or password incorrect!');\n      }\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  _isFormValid() {\n    return this._isNameValid(this.state.username) && this._isPassValid(this.state.password);\n  }\n\n  _isNameValid(username) {\n    let isValid = true;\n    let errorName = '';\n\n    if (username === '') {\n      errorName = 'Name is empty!';\n      isValid = false;\n      this.setState({\n        errorName: errorName\n      });\n      return isValid;\n    }\n\n    if (username.length < 3) {\n      errorName = 'Name must have 3 symbols minimum!';\n      isValid = false;\n      this.setState({\n        errorName: errorName\n      });\n      return isValid;\n    }\n  }\n\n  _isPassValid(password) {\n    let isValid = true;\n    let errorPassword = '';\n\n    if (password === '') {\n      errorPassword = 'Password is empty!';\n      isValid = false;\n      this.setState({\n        errorName: errorPassword\n      });\n      return isValid;\n    }\n  } // Check Login  \n\n\n  render() {\n    if (this.state.isLoggedIn == true && this.state.isAdmin == true) {\n      return React.createElement(Redirect, {\n        to: \"/Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.isLoggedIn == true && this.state.isAdmin == false) {\n      // redirect to Admin/User\n      return React.createElement(Redirect, {\n        to: \"/Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Your name\",\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      onChange: (event, target) => this.setState({\n        username: event.target.value\n      }) // onChange={this.changeName}\n      ,\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Your password\",\n      icon: \"lock\",\n      group: true,\n      type: \"password\",\n      validate: true,\n      onChange: (event, target) => this.setState({\n        password: event.target.value\n      }) // onChange={this.changePassword}\n      ,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"cyan\",\n      type: \"submit\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"LOGIN\"))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"font-weight-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Not a member? \", React.createElement(Link, {\n      to: \"/Registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Sign Up\"))))))))), React.createElement(Route, {\n      path: \"/Registration\",\n      exact: true,\n      component: Registration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/Home\",\n      exact: true,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/Login/Login.js"],"names":["React","Component","axios","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","MDBModalFooter","BrowserRouter","Route","Link","Switch","Redirect","Registration","Home","Login","constructor","props","context","state","userName","password","errorName","errorPassword","currentUser","isLoginSuccess","foundUsers","isLoggedIn","isAdmin","checkCookie","cookieArr","handleClick","console","log","isValud","_isFormValid","self","get","withCredentials","then","response","data","setState","setLogin","catch","error","alert","localUser","localStorage","JSON","stringify","role","bind","_isNameValid","username","_isPassValid","isValid","length","render","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n//import Registration from './MyReg';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody,MDBModalFooter } from 'mdbreact';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Route, Link, Switch, Redirect} from 'react-router-dom';\n\nimport Registration from '../Registration/Registration';\nimport Home from '../Home/Home';\n\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import AppBar from 'material-ui/AppBar';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import TextField from 'material-ui/TextField';\n\nclass Login extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n\n  state={\n    userName:\"\",\n    password:\"\",\n\n    errorName:\"\",\n    errorPassword:\"\",\n\n    currentUser:{},\n    isLoginSuccess:\"\",\n\n    foundUsers:[],\n    isLoggedIn: false,\n    isAdmin:false,\n\n    checkCookie:\"\",\n    cookieArr:[],\n   }\n\n    //  componentDidMount=()=>{\n    //   {   \n    //     var self=this;\n    //     axios.get(`http://localhost:4000/checkLogin?name=${name}&password=${password}`,{withCredentials:true})\n    //     .then(function(response){\n          \n    //       console.log('isLoggedIn',response.data);\n          \n    //      self.setState({ isLoggedIn: response.data });\n    //     })\n    //     .catch(function(error){\n    //        console.log(error);\n    //     });\n    \n    //     }\n    //    }\n\n//Validation userName and password\n\n_isFormValid() {\n  return this._isNameValid(this.state.username) && this._isPassValid(this.state.password)\n}\n\n_isNameValid(username) {\n  let isValid=true;\n  let errorName='';\n\n  if (username==='') {\n    errorName='Name is empty!';\n    isValid=false;\n    this.setState({errorName:errorName});\n    return isValid;\n  } \n\n  if (username.length < 3) {\n    errorName='Name must have 3 symbols minimum!';\n    isValid=false;\n    this.setState({errorName:errorName});\n    return isValid;\n  } \n}\n\n_isPassValid(password) {\n  let isValid=true;\n  let errorPassword='';\n\n  if (password==='') {\n    errorPassword='Password is empty!';\n    isValid=false;\n    this.setState({errorName:errorPassword});\n    return isValid;\n  } \n}\n      \n// Check Login  \n\nhandleClick=()=>{ \n    console.log('checkLogin')\n    let isValud=this._isFormValid();\n        if (isValud==true) {\n          console.log('Valid')\n          let password=this.state.password;\n          let userName=this.state.userName; \n          var self=this;\n          axios.get(`http://localhost:5000/checkLogin?name=${userName}&password=${password}`,{withCredentials:true})\n          .then(function(response){\n            \n          console.log('currentUser',response.data);\n            \n          self.setState({ currentUser: response.data });\n\n          this.setLogin();  \n          })\n          .catch(function(error){\n            console.log(error);\n          });\n        } \n        else {\n          if (this.state.errorName) {alert(this.state.errorName);}\n          if (this.state.errorPassword) {alert(this.state.errorPassword);}\n         }\n\n      } \n\n    setLogin=()=>{       \n        let localUser = this.state.currentUser;\n\n          if(localUser!=={}){  \n            localStorage.currentUser=JSON.stringify(localUser); //save user to localstorage \n            this.setState({isLoggedIn:true})    \n            \n            if (localUser.role==\"1\")\n                 {\n                  this.setState({isAdmin: true});\n                  console.log(\"isAdmin\",this.state.isAdmin)    \n                 } \n                 else \n                   {\n                     this.setState({isAdmin: false});\n                     console.log(\"isAdmin\",this.state.isAdmin)\n                   }          \n                  }  \n                  else {\n                    alert('Name or password incorrect!')\n                  } \n                 }\n                 \n    render() {\n\n      if (this.state.isLoggedIn == true && this.state.isAdmin ==true){ \n        return  <Redirect to=\"/Home\"/>\n       }\n       if (this.state.isLoggedIn == true && this.state.isAdmin ==false){   // redirect to Admin/User\n        return  <Redirect to=\"/Home\"/>\n       }\n\n        return (\n          <BrowserRouter>\n          \n            <MDBContainer>\n              <MDBRow>\n                <MDBCol md=\"6\">\n                  <MDBCard>\n                    <MDBCardBody>\n                      <form>\n                        <p className=\"h4 text-center py-4\">Login</p>\n                        <div className=\"grey-text\">\n                          <MDBInput\n                            label=\"Your name\"\n                            icon=\"user\"\n                            group\n                            type=\"text\"\n                            validate\n                            error=\"wrong\"\n                            success=\"right\"\n                            onChange = {(event,target) => this.setState({username:event.target.value})}\n                            // onChange={this.changeName}\n                            value={this.state.username}\n                          />\n                          <MDBInput\n                            label=\"Your password\"\n                            icon=\"lock\"\n                            group\n                            type=\"password\"\n                            validate\n                            onChange = {(event,target) => this.setState({password:event.target.value})}\n                            // onChange={this.changePassword}\n                            value={this.state.password}\n                          />\n                        </div>\n                        <div className=\"text-center py-4 mt-3\">\n                          <MDBBtn color=\"cyan\" type=\"submit\" onClick={() =>this.handleClick()}>\n                            LOGIN\n                          </MDBBtn>\n                        </div>\n                      </form>\n                      <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <p>Not a member? <Link to=\"/Registration\">Sign Up</Link></p>\n                  \n                  {/* <p>Forgot Password?</p> */}\n                </div>\n               \n              </MDBModalFooter>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            \n            </MDBContainer>\n            \n          \n            <Route path=\"/Registration\" exact component={Registration} />\n            <Route path=\"/Home\" exact component={Home} />\n            </BrowserRouter>\n          );\n        };\n      }   \n  export default Login;\n  "]},"metadata":{},"sourceType":"module"}