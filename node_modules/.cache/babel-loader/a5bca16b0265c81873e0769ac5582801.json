{"ast":null,"code":"var _jsxFileName = \"/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/ModalLogin/ModalLogin.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, Switch, Redirect } from 'react-router-dom';\nimport { Container, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { MDBMask, MDBView } from 'mdbreact';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport axios from \"axios\";\nimport './Login.css';\nimport HomeAdmin from '../Home/HomeAdmin';\nimport HomeUser from '../Home/HomeUser';\nimport Registration from '../Registration/Registration';\n\nclass ModalLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      currentUser: {},\n      isLoginSuccess: \"\",\n      loggedIn: false\n    };\n\n    this.handleClick = () => {\n      let password = this.state.password;\n      let userName = this.state.userName;\n      console.log(password, userName);\n      var self = this;\n      axios.get(\"http://localhost:5000/checkLogin?name=\".concat(userName, \"&password=\").concat(password), {\n        withCredentials: true\n      }).then(function (response) {\n        console.log('currentUser', response.data);\n        self.setState({\n          currentUser: response.data\n        });\n\n        if (response.data !== {}) {\n          localStorage.currentUser = JSON.stringify(response.data); //save user to localstorage \n\n          self.setState({\n            loggedIn: true\n          });\n        } else {\n          alert('Name or password incorrect!');\n        } // let curUs=response.data;\n        // self.setState({ isLoggedIn: true });  \n        //localStorage.currentUser=JSON.stringify(curUs);\n        // this.setUserAccess();  \n\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n  }\n\n  // setUserAccess=()=>{       \n  //   let localUser = this.state.currentUser;\n  //     if(localUser!=={}){  \n  //       localStorage.currentUser=JSON.stringify(localUser); //save user to localstorage \n  //       this.setState({isLoggedIn:true})    \n  // if (localUser.role==\"1\")\n  //      {\n  //       this.setState({isAdmin: true});\n  //       console.log(\"isAdmin\",this.state.isAdmin)    \n  //      } \n  //      else \n  //        {\n  //          this.setState({isAdmin: false});\n  //          console.log(\"isAdmin\",this.state.isAdmin)\n  //        }          \n  // }  \n  // else {\n  //   alert('Name or password incorrect!')\n  // } \n  //  }\n  render() {\n    console.log(\"userName : \", this.state.userName);\n    console.log(\"password : \", this.state.password);\n    console.log(\"loggedIn : \", this.state.loggedIn);\n    console.log(\"currentUser : \", this.state.currentUser);\n    console.log(\"role : \", this.state.currentUser.role);\n\n    if (this.state.loggedIn == true && this.state.currentUser.role == 1) {\n      return React.createElement(Redirect, {\n        to: \"/HomeAdmin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loggedIn == true && this.state.currentUser.role == 0) {\n      // redirect to Admin/User\n      return React.createElement(Redirect, {\n        to: \"/HomeUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } //  if (this.state.loggedIn == false){   // redirect to Login/Registration\n    //   return  <Redirect to=\"/Login\"/>\n    //  }\n\n\n    return React.createElement(\"div\", {\n      className: \"Main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loginBox col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"LOGIN\"), React.createElement(AvForm, {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Label, {\n      className: \"lableBox\",\n      for: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Enter user name (email)\"), React.createElement(AvField, {\n      type: \"email\",\n      name: \"userName\",\n      id: \"userName\",\n      placeholder: \"Enter user name (mail)\",\n      onChange: (event, target) => this.setState({\n        userName: event.target.value\n      }),\n      value: this.state.userName,\n      errorMessage: \"Invalid name\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[A-Za-z0-9]+$'\n        },\n        minLength: {\n          value: 6\n        },\n        maxLength: {\n          value: 16\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Password\"), React.createElement(AvField, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"****\",\n      onChange: (event, target) => this.setState({\n        password: event.target.value\n      }),\n      value: this.state.password,\n      errorMessage: \"Invalid password\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[A-Za-z0-9]+$'\n        },\n        minLength: {\n          value: 6\n        },\n        maxLength: {\n          value: 16\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"offset-5\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"login\"), React.createElement(\"div\", {\n      className: \"font-weight-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Not a member? \", React.createElement(Link, {\n      to: \"/Registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Sign Up\"))))))));\n  }\n\n}\n\nexport default ModalLogin;","map":{"version":3,"sources":["/Users/annapryadko/Desktop/GitHub/ReactProjectVacations/projectvacations/src/Components/ModalLogin/ModalLogin.js"],"names":["React","Component","Route","Link","Switch","Redirect","Container","Col","Form","FormGroup","Label","Input","Button","MDBMask","MDBView","AvForm","AvField","axios","HomeAdmin","HomeUser","Registration","ModalLogin","state","userName","password","currentUser","isLoginSuccess","loggedIn","handleClick","console","log","self","get","withCredentials","then","response","data","setState","localStorage","JSON","stringify","alert","catch","error","render","role","event","target","value","required","pattern","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport { Route, Link, Switch,Redirect} from 'react-router-dom';\nimport {Container, Col, Form,FormGroup, Label, Input,Button,} from 'reactstrap';\nimport {MDBMask, MDBView } from 'mdbreact';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport axios from \"axios\";\n\nimport './Login.css';\n\nimport HomeAdmin from '../Home/HomeAdmin';\nimport HomeUser from '../Home/HomeUser';\nimport Registration from '../Registration/Registration';\n\nclass ModalLogin extends Component {\n    \n    state={\n\n        userName:\"\",\n        password:\"\",\n    \n        currentUser:{},\n        isLoginSuccess:\"\",\n    \n        loggedIn: false,\n    \n       }  \n\nhandleClick=()=>{ \n          \n          let password=this.state.password;\n          let userName=this.state.userName; \n          console.log(password,userName);\n          var self=this;\n          axios.get(`http://localhost:5000/checkLogin?name=${userName}&password=${password}`,{withCredentials:true})\n          .then(function(response){\n            \n          console.log('currentUser',response.data);\n            \n          self.setState({ currentUser: response.data});\n\n          if(response.data!=={}){  \n            localStorage.currentUser=JSON.stringify(response.data); //save user to localstorage \n            self.setState({loggedIn:true})  \n          } \n          else {\n            alert('Name or password incorrect!')\n          } \n         // let curUs=response.data;\n         // self.setState({ isLoggedIn: true });  \n          //localStorage.currentUser=JSON.stringify(curUs);\n          // this.setUserAccess();  \n          })\n          .catch(function(error){\n            console.log(error);\n          });\n         \n      } \n\n      // setUserAccess=()=>{       \n      //   let localUser = this.state.currentUser;\n\n      //     if(localUser!=={}){  \n      //       localStorage.currentUser=JSON.stringify(localUser); //save user to localstorage \n      //       this.setState({isLoggedIn:true})    \n            \n            // if (localUser.role==\"1\")\n            //      {\n            //       this.setState({isAdmin: true});\n            //       console.log(\"isAdmin\",this.state.isAdmin)    \n            //      } \n            //      else \n            //        {\n            //          this.setState({isAdmin: false});\n            //          console.log(\"isAdmin\",this.state.isAdmin)\n            //        }          \n                  // }  \n                  // else {\n                  //   alert('Name or password incorrect!')\n                  // } \n                //  }\n\nrender() {\n    \n    console.log(\"userName : \" , this.state.userName);\n    console.log(\"password : \" , this.state.password);\n\n    console.log(\"loggedIn : \" , this.state.loggedIn);\n\n    console.log(\"currentUser : \" , this.state.currentUser);\n\n    console.log(\"role : \" , this.state.currentUser.role);\n\n    if (this.state.loggedIn == true && this.state.currentUser.role ==1){ \n      return  <Redirect to=\"/HomeAdmin\"/>\n     }\n     \n     if (this.state.loggedIn == true && this.state.currentUser.role ==0){   // redirect to Admin/User\n      return  <Redirect to=\"/HomeUser\"/>\n     }\n    \n    //  if (this.state.loggedIn == false){   // redirect to Login/Registration\n    //   return  <Redirect to=\"/Login\"/>\n    //  }\n        \n    return (\n   \n      <div className=\"Main\">                  \n              <Container className=\"App\">\n                 <div className=\"row\">\n                 <div className=\"loginBox col-md-4\">\n                   <h2 className=\"mb-2\">LOGIN</h2>\n                   <AvForm className=\"form\">\n                     <Col>\n                       <FormGroup>\n                       <Label className=\"lableBox\" for=\"userName\">Enter user name (email)</Label>\n                         <AvField\n                           type=\"email\"\n                           name=\"userName\"\n                           id=\"userName\"\n                           placeholder=\"Enter user name (mail)\"\n                           onChange = {(event,target) => this.setState({userName:event.target.value})}\n                           value={this.state.userName}\n                           errorMessage=\"Invalid name\" validate={{\n                           required: {value: true},\n                           pattern: {value: '^[A-Za-z0-9]+$'},\n                           minLength: {value: 6},\n                           maxLength: {value: 16}\n}} \n                         />\n                       </FormGroup>\n                     </Col>\n                     <Col>\n                       <FormGroup>\n                         <Label for=\"Password\">Password</Label>\n                         <AvField\n                           type=\"password\"\n                           name=\"password\"\n                           id=\"examplePassword\"\n                           placeholder=\"****\"\n                           onChange = {(event,target) => this.setState({password:event.target.value})}\n                           value={this.state.password}\n                           errorMessage=\"Invalid password\" validate={{\n                            required: {value: true},\n                            pattern: {value: '^[A-Za-z0-9]+$'},\n                            minLength: {value: 6},\n                            maxLength: {value: 16}\n          }} />\n                        \n                       </FormGroup>\n                     </Col>\n              <button type=\"submit\" className=\"offset-5\" onClick={() =>this.handleClick()}>login</button>\n              {/* <button type=\"button\" className=\"btn btn-primary offset-1 \" ><Link to=\"/Regester\">Regester Now</Link></button>  */}\n              <div className=\"font-weight-light\">\n                  <p>Not a member? <Link to=\"/Registration\">Sign Up</Link></p>  \n                </div>    \n                   </AvForm>\n                   </div>\n                   </div>\n                 </Container>\n                 {/* <Route path=\"/Registration\" exact component={Registration} />\n                 <Route path=\"/HomeUser\" exact component={HomeUser} />\n                 <Route path=\"/HomeAdmin\" exact component={HomeAdmin} /> */}\n                 {/* <Route path=\"/\" exact component={Login_Project} /> */}\n                 </div>  \n              \n    );\n}\n}\n\nexport default ModalLogin"]},"metadata":{},"sourceType":"module"}